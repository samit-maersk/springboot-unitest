name: Build

on:
  push:
    branches:
      - main
      - 'releases/**'

jobs:
  maven:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build with Maven
      run: ./mvnw clean install

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - custom-versioning
      if: ${{ github.ref != 'refs/heads/main' }}
      run: |
        version=$(date "+%Y.%m.%d.%H.%M")
        echo "VERSION=${version,,}" >> $GITHUB_ENV
        echo ::set-output name=VERSION::$version
    - custom-versioning
      if: ${{ github.ref == 'refs/heads/main'  }}
      run: |
        version=1.0.$(date "+%Y%m%d%H%M")
        echo "VERSION=${version,,}" >> $GITHUB_ENV
        echo ::set-output name=VERSION::$version
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ github.repository }}
        tags:|
          type=raw,value=${{ steps.custom-versioning.outputs.VERSION }}

    - name: Docker Build
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: debug
      run: |
        echo tags: ${{ steps.meta.outputs.tags }}
        echo labels: ${{ steps.meta.outputs.labels }}
        docker images -a
    - name: trivy scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ steps.meta.outputs.tags }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker Push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}